drop table IF EXISTS DATA_ITEM;
create table DATA_ITEM
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	ORDER_INDEX INTEGER,
	PARENT_ID VARCHAR(255),
	PATH VARCHAR(255),
	CODE VARCHAR(255)
		constraint 字典编码
			unique,
	CODE_INDEX INTEGER,
	DATA_ITEM_TYPE_ID VARCHAR(255),
	NAME VARCHAR(255),
	STATE VARCHAR(255)
);

drop table IF EXISTS DATA_ITEM_TYPE;
create table DATA_ITEM_TYPE
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	TYPE_NAME VARCHAR(255)
		constraint 类型名称
			unique
);

drop table IF EXISTS DEPT_INFO;
create table DEPT_INFO
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	ORDER_INDEX INTEGER,
	PARENT_ID VARCHAR(255),
	PATH VARCHAR(255),
	DEPT_DESC VARCHAR(255),
	DEPT_INDEX INTEGER,
	DEPT_NAME VARCHAR(255),
	DEPT_STATE VARCHAR(255),
	DEPT_TYPE VARCHAR(255),
	DEPT_URL VARCHAR(255)
);

drop table IF EXISTS DEPT_USER;
create table DEPT_USER
(
	ID VARCHAR(255) not null
		primary key,
	DEPT_ID VARCHAR(255),
	USER_ID VARCHAR(255)
);

drop table IF EXISTS FILE_STORAGE;
create table FILE_STORAGE
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	EXTENSION VARCHAR(255),
	FILE_NAME VARCHAR(255),
	RELATIVE_PATH VARCHAR(255),
	STATE INTEGER,
	constraint 文件名
		unique (EXTENSION, FILE_NAME)
);

drop table IF EXISTS MENU;
create table MENU
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	ORDER_INDEX INTEGER,
	PARENT_ID VARCHAR(255),
	PATH VARCHAR(255),
	AUTHORITY_ID VARCHAR(255),
	CONTROLLER_CLASS VARCHAR(255),
	ICON_PATH VARCHAR(255),
	MARK VARCHAR(255),
	MENU_CLASSIFY VARCHAR(255),
	MENU_DESC VARCHAR(255),
	MENU_INDEX INTEGER,
	MENU_NAME VARCHAR(255)
		constraint 菜单名称
			unique,
	MENU_URL VARCHAR(255),
	SMALL_ICON_PATH VARCHAR(255)
);

drop table IF EXISTS ROLE;
create table ROLE
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	ROLE_DESCRIPTION VARCHAR(255),
	ROLE_INDEX INTEGER,
	ROLE_NAME VARCHAR(255)
		constraint 角色名称
			unique
);

drop table IF EXISTS ROLE_GROUP;
create table ROLE_GROUP
(
	ID VARCHAR(255) not null
		primary key,
	GROUP_ID VARCHAR(255),
	ROLE_ID VARCHAR(255)
);

drop table IF EXISTS ROLE_MENU;
create table ROLE_MENU
(
	ID VARCHAR(255) not null
		primary key,
	MENU_ID VARCHAR(255),
	ROLE_ID VARCHAR(255)
);

drop table IF EXISTS ROLE_USER;
create table ROLE_USER
(
	ID VARCHAR(255) not null
		primary key,
	ROLE_ID VARCHAR(255),
	USER_ID VARCHAR(255)
);

drop table IF EXISTS USER_GROUP;
create table USER_GROUP
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	GROUP_INDEX INTEGER,
	GROUP_NAME VARCHAR(255),
	STATE VARCHAR(255)
);

drop table IF EXISTS USER_GROUP_USER;
create table USER_GROUP_USER
(
	ID VARCHAR(255) not null
		primary key,
	GROUP_ID VARCHAR(255),
	USER_ID VARCHAR(255)
);

drop table IF EXISTS USER_INFO;
create table USER_INFO
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	ADDRESS VARCHAR(255),
	AVATAR VARCHAR(255),
	AVATAR_CONTENT BLOB,
	BALANCE DECIMAL(19,2),
	BIRTHDAY VARCHAR(255),
	BLOG VARCHAR(255),
	EMAIL VARCHAR(255),
	EXPERIENCE INTEGER,
	GENDER VARCHAR(255),
	ID_NUMBER VARCHAR(255),
	INTEGRAL INTEGER,
	LOGIN_NAME VARCHAR(255)
		constraint 用户名
			unique,
	NICKNAME VARCHAR(255),
	PASSWORD VARCHAR(255),
	PHONE_NUM VARCHAR(255),
	STATE VARCHAR(255),
	TAG VARCHAR(255),
	USER_INDEX INTEGER,
	USER_METADATA VARCHAR(255),
	USER_NAME VARCHAR(255)
);

drop table IF EXISTS WEB_LOGS;
create table WEB_LOGS
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	END_TIME TIMESTAMP,
	INFO VARCHAR(255),
	LOG_CLASS_NAME VARCHAR(255),
	LOG_CLIENT_IP VARCHAR(255),
	LOG_INFO VARCHAR(255),
	LOG_METHOD_NAME VARCHAR(255),
	LOG_OPERATION_TYPE VARCHAR(255),
	LOG_PRIMARY_KEY VARCHAR(255),
	LOG_SERVER_IP VARCHAR(255),
	LOG_TABLE_NAME VARCHAR(255),
	LOG_URL VARCHAR(255),
	LOG_USER_NAME VARCHAR(255),
	MODULE VARCHAR(255),
	R1 VARCHAR(255),
	R2 VARCHAR(255),
	R3 VARCHAR(255),
	R4 VARCHAR(255),
	R5 VARCHAR(255),
	START_TIME TIMESTAMP,
	TYPE VARCHAR(255)
);


drop table IF EXISTS ROOM;
create table ROOM
(
	PK VARCHAR(255) not null
		primary key,
	FLAG INTEGER,
	ROOM_DESC VARCHAR(255),
	ROOM_NAME VARCHAR(255)
);

drop table IF EXISTS SCHOOL_GRADE;
create table SCHOOL_GRADE
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	ORDER_INDEX INTEGER,
	PARENT_ID VARCHAR(255),
	PATH VARCHAR(255),
	GRADE_NAME VARCHAR(255),
	NAME VARCHAR(255),
	STATE VARCHAR(255)
);

drop table IF EXISTS STUDENT;
create table STUDENT
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	STUDENT_CLASS VARCHAR(255),
	STUDENT_NAME VARCHAR(255),
	STUDENT_SEX VARCHAR(255)
);

drop table IF EXISTS TEACHER;
create table TEACHER
(
	PK VARCHAR(255) not null
		primary key,
	FLAG INTEGER,
	TEACHER_NAME VARCHAR(255),
	TEACHER_SEX VARCHAR(255)
);

drop table IF EXISTS COURSE;
create table COURSE
(
	ID VARCHAR(255) not null
		primary key,
	CREATED_BY VARCHAR(255),
	CREATED_DATE TIMESTAMP,
	FLAG INTEGER,
	MODIFIED_BY VARCHAR(255),
	MODIFIED_DATE TIMESTAMP,
	REMARK VARCHAR(255),
	COURSE_NAME VARCHAR(255)
);

drop table IF EXISTS COURSE_STUDENT_SCORE;
create table COURSE_STUDENT_SCORE
(
	ID VARCHAR(255) not null
		primary key,
	COURSE_ID VARCHAR(255),
	SCORE VARCHAR(255),
	STUDENT_ID VARCHAR(255)
);
